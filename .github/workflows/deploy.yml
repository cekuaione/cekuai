name: Deploy to OCI (Production)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.OCI_SSH_KEY }}" > ~/.ssh/oci_key
        chmod 600 ~/.ssh/oci_key
        ssh-keyscan -H ${{ secrets.OCI_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to OCI Production
      run: |
        ssh -i ~/.ssh/oci_key ubuntu@${{ secrets.OCI_HOST }} bash <<'ENDSSH'
          set -euo pipefail

          cd /home/ubuntu
          mkdir -p cekuai
          cd cekuai

          if [ -d .git ]; then
            git fetch --all --prune
            git reset --hard origin/main
          else
            git clone https://github.com/cekuaione/cekuai.git .
            git checkout main
          fi

          cat <<'ENVEOF' > .env
          EXERCISEDB_API_KEY=${{ secrets.EXERCISEDB_API_KEY }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          NEXT_PUBLIC_API_URL=http://${{ secrets.OCI_HOST }}:3000
          ENVEOF

          export APP_CONTAINER_NAME=cekuai-app
          export APP_PORT=3000
          export APP_INTERNAL_PORT=3000

          docker compose down --remove-orphans || true
          docker compose build --pull
          docker compose up -d

          echo "‚è≥ Waiting for app container to report running state..."
          state=""
          for attempt in $(seq 1 12); do
            state=$(docker compose ps --format '{{.State}}' app 2>/dev/null || true)
            if [[ "$state" == running* ]]; then
              break
            fi
            sleep 10
          done

          if [[ "$state" != running* ]]; then
            echo "‚ùå App container failed to reach running state (state: ${state:-unknown})."
            docker compose ps
            docker compose logs --no-color
            exit 1
          fi

          docker compose ps
          docker compose logs --tail 100
        ENDSSH
    
    - name: Display info
      run: |
        echo "‚úÖ Production deployed!"
        echo "üåê http://${{ secrets.OCI_HOST }}:3000"
